{"remainingRequest":"D:\\front-end files\\test\\my-gridsome\\node_modules\\babel-loader\\lib\\index.js??ref--1-1!D:\\front-end files\\test\\my-gridsome\\node_modules\\gridsome\\app\\utils\\prefetch.js","dependencies":[{"path":"D:\\front-end files\\test\\my-gridsome\\node_modules\\gridsome\\app\\utils\\prefetch.js","mtime":1628149246774},{"path":"D:\\front-end files\\test\\my-gridsome\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628149244789},{"path":"D:\\front-end files\\test\\my-gridsome\\node_modules\\babel-loader\\lib\\index.js","mtime":1628149244548}],"contextDependencies":[],"result":["import \"core-js/modules/es.object.to-string.js\";\n\nvar isSupported = 'document' in global && function () {\n  var link = document.createElement('link');\n  return link.relList && link.relList.supports && link.relList.supports('prefetch');\n}();\n\nexport default function prefetch(url) {\n  return new Promise(function (resolve, reject) {\n    if (isSupported) {\n      var link = document.createElement('link');\n\n      var removeLink = function removeLink() {\n        return document.head.removeChild(link);\n      };\n\n      link.onerror = function (err) {\n        removeLink();\n        reject(err);\n      };\n\n      link.onload = function () {\n        removeLink();\n        resolve();\n      };\n\n      link.setAttribute('rel', 'prefetch');\n      link.setAttribute('href', url);\n      document.head.appendChild(link);\n    } else {\n      var req = new XMLHttpRequest();\n      req.open('GET', url, true);\n      req.withCredentials = true;\n\n      req.onload = function () {\n        if (req.status === 200) resolve();else reject(new Error(req.statusText));\n      };\n\n      req.send(null);\n    }\n  });\n}",{"version":3,"sources":["D:/front-end files/test/my-gridsome/node_modules/gridsome/app/utils/prefetch.js"],"names":["isSupported","global","link","document","createElement","relList","supports","prefetch","url","Promise","resolve","reject","removeLink","head","removeChild","onerror","err","onload","setAttribute","appendChild","req","XMLHttpRequest","open","withCredentials","status","Error","statusText","send"],"mappings":";;AAAA,IAAMA,WAAW,GACf,cAAcC,MAAd,IACC,YAAM;AACL,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACA,SAAOF,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACG,OAAL,CAAaC,QAA7B,IAAyCJ,IAAI,CAACG,OAAL,CAAaC,QAAb,CAAsB,UAAtB,CAAhD;AACD,CAHD,EAFF;;AAQA,eAAe,SAASC,QAAT,CAAmBC,GAAnB,EAAwB;AACrC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIX,WAAJ,EAAiB;AACf,UAAME,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;;AACA,UAAMQ,UAAU,GAAG,SAAbA,UAAa;AAAA,eAAMT,QAAQ,CAACU,IAAT,CAAcC,WAAd,CAA0BZ,IAA1B,CAAN;AAAA,OAAnB;;AAEAA,MAAAA,IAAI,CAACa,OAAL,GAAe,UAAAC,GAAG,EAAI;AACpBJ,QAAAA,UAAU;AACVD,QAAAA,MAAM,CAACK,GAAD,CAAN;AACD,OAHD;;AAKAd,MAAAA,IAAI,CAACe,MAAL,GAAc,YAAM;AAClBL,QAAAA,UAAU;AACVF,QAAAA,OAAO;AACR,OAHD;;AAKAR,MAAAA,IAAI,CAACgB,YAAL,CAAkB,KAAlB,EAAyB,UAAzB;AACAhB,MAAAA,IAAI,CAACgB,YAAL,CAAkB,MAAlB,EAA0BV,GAA1B;AAEAL,MAAAA,QAAQ,CAACU,IAAT,CAAcM,WAAd,CAA0BjB,IAA1B;AACD,KAlBD,MAkBO;AACL,UAAMkB,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBd,GAAhB,EAAqB,IAArB;AACAY,MAAAA,GAAG,CAACG,eAAJ,GAAsB,IAAtB;;AAEAH,MAAAA,GAAG,CAACH,MAAJ,GAAa,YAAM;AACjB,YAAIG,GAAG,CAACI,MAAJ,KAAe,GAAnB,EAAwBd,OAAO,GAA/B,KACKC,MAAM,CAAC,IAAIc,KAAJ,CAAUL,GAAG,CAACM,UAAd,CAAD,CAAN;AACN,OAHD;;AAKAN,MAAAA,GAAG,CAACO,IAAJ,CAAS,IAAT;AACD;AACF,GA/BM,CAAP;AAgCD","sourcesContent":["const isSupported = (\r\n  'document' in global &&\r\n  (() => {\r\n    const link = document.createElement('link')\r\n    return link.relList && link.relList.supports && link.relList.supports('prefetch')\r\n  })()\r\n)\r\n\r\nexport default function prefetch (url) {\r\n  return new Promise((resolve, reject) => {\r\n    if (isSupported) {\r\n      const link = document.createElement('link')\r\n      const removeLink = () => document.head.removeChild(link)\r\n\r\n      link.onerror = err => {\r\n        removeLink()\r\n        reject(err)\r\n      }\r\n\r\n      link.onload = () => {\r\n        removeLink()\r\n        resolve()\r\n      }\r\n\r\n      link.setAttribute('rel', 'prefetch')\r\n      link.setAttribute('href', url)\r\n\r\n      document.head.appendChild(link)\r\n    } else {\r\n      const req = new XMLHttpRequest()\r\n      req.open('GET', url, true)\r\n      req.withCredentials = true\r\n\r\n      req.onload = () => {\r\n        if (req.status === 200) resolve()\r\n        else reject(new Error(req.statusText))\r\n      }\r\n\r\n      req.send(null)\r\n    }\r\n  })\r\n}\r\n"]}]}
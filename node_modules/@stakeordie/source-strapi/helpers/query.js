const axios = require('axios')
const pluralize = require('pluralize')

module.exports = async ({ apiURL, resourceName, jwtToken, queryLimit, isSingleType, localizedTypes }) => {
  let resource
  if (isSingleType) {
    resource = resourceName
  } else {
    resource = pluralize(resourceName)
  }

  const isLocalized = localizedTypes.find(it => it === resourceName);

  const apiEndpoint = `${apiURL}/${resource}?_limit=${queryLimit}`
  if (isLocalized) {
    const data = await fetch(apiEndpoint, jwtToken, resource);
    const locales = data.localizations;
    const endpoints = locales.map(it => `${apiEndpoint}&_locale=${it.locale}`);

    const responses = [];
    for (const it of endpoints) {
      const response = await fetch(it, jwtToken, resource);
      responses.push(response);
    }
    const result = [data, ...responses];
    return new Promise((resolve) => resolve(result));
  } else {
    return fetch(apiEndpoint, jwtToken, resource);
  }

  function fetch(apiEndpoint, jwtToken, resource) {
    const fetchRequestConfig = {}
    if (jwtToken !== null) {
      fetchRequestConfig.headers = {
        Authorization: `Bearer ${jwtToken}`
      }
    }

    // Make API request.
    return axios(apiEndpoint, fetchRequestConfig)
      .then(res => res.data)
      .catch(err => {
        console.error(`Unable to get content type (${resource}). Did you enable permissions in the Strapi admin for this?`)
        throw err
      })
  }
}
